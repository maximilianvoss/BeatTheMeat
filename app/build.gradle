apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
def mVersionName = ""

android {
    compileSdkVersion 27

    def versionPropsFile = rootProject.file('version.properties')
    def value = 0
    Properties versionProps = new Properties()
    if (!versionPropsFile.exists()) {
        versionProps['VERSION_MAJOR'] = "1"
        versionProps['VERSION_MINOR'] = "0"
        versionProps['VERSION_PATCH'] = "0"
        versionProps['VERSION_NUMBER'] = "0"
        versionProps['VERSION_BUILD'] = "-1"
        versionProps.store(versionPropsFile.newWriter(), null)
    }

    def runTasks = gradle.startParameter.taskNames
    if ('assembleRelease' in runTasks) {
        value = 1
    }

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))

        versionProps['VERSION_PATCH'] = (versionProps['VERSION_PATCH'].toInteger() + value).toString()
        versionProps['VERSION_NUMBER'] = (versionProps['VERSION_NUMBER'].toInteger() + value).toString()
        versionProps['VERSION_BUILD'] = (versionProps['VERSION_BUILD'].toInteger() + 1).toString()

        versionProps.store(versionPropsFile.newWriter(), null)

        mVersionName = "v${versionProps['VERSION_MAJOR']}.${versionProps['VERSION_MINOR']}.${versionProps['VERSION_PATCH']}"

        defaultConfig {
            applicationId "rocks.voss.beatthemeat"
            minSdkVersion 24
            targetSdkVersion 27
            versionCode versionProps['VERSION_NUMBER'].toInteger()
            versionName "${mVersionName} Build: ${versionProps['VERSION_BUILD']}"
        }
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

    signingConfigs {
        signConfig {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            minifyEnabled false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.signConfig
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/ASL-2.0.txt'
        exclude 'META-INF/LGPL-3.0.txt'
    }
}

dependencies {
    annotationProcessor "android.arch.persistence.room:compiler:1.1.0"
    annotationProcessor 'org.projectlombok:lombok:1.16.20'
    compileOnly 'org.projectlombok:lombok:1.16.20'
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:support-compat:27.1.1'
    implementation 'android.arch.persistence.room:runtime:1.1.0'
    implementation 'org.threeten:threetenbp:1.3.6'
    implementation 'com.google.android.gms:play-services-drive:15.0.1'
    implementation 'com.google.android.gms:play-services-auth:15.0.1'
    implementation 'com.github.fge:jackson-coreutils:1.8'
    implementation 'commons-io:commons-io:2.6'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

play {
    serviceAccountEmail = 'appreleaser@api-7700700297653980727-165297.iam.gserviceaccount.com'
    pk12File = file('../release.p12')
    track = 'production'
}

task gittag() {
    outputs.upToDateWhen { false }
    inputs.file(rootProject.file('version.properties'))

    def runTasks = gradle.startParameter.taskNames
    if ('assembleRelease' in runTasks) {
        exec {
            workingDir rootProject.getRootDir()
            commandLine 'git', 'add', "${rootProject.path}/version.properties"
        }
        exec {
            workingDir rootProject.getRootDir()
            commandLine 'git', 'commit', '-m', '"release build"'
        }
        exec {
            workingDir rootProject.getRootDir()
            commandLine 'git', 'tag', mVersionName
        }
        exec {
            workingDir rootProject.getRootDir()
            commandLine 'git', 'push'
        }
    }
}